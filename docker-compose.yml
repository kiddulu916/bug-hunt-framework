version: "3.9"

# Reusable anchors
x-db-env: &db-env
  POSTGRES_USER: ${POSTGRES_USER:-app}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
  POSTGRES_DB: ${POSTGRES_DB:-app_db}

x-db-url: &db-url postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-app_db}

x-worker-base: &worker-base
  restart: unless-stopped
  init: true
  depends_on:
    db:
      condition: service_healthy
  environment:
    DATABASE_URL: *db-url
  networks: [backend]

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      <<: *db-env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-app_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - db-data:/var/lib/postgresql/data
      # Automatically run init scripts if present
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks: [backend]
    ports:
      - "5432:5432"

  api:
    build: ./server
    restart: unless-stopped
    init: true
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: *db-url
    ports:
      - "8000:8000"
    networks: [backend]

  client:
    build: ./client
    restart: unless-stopped
    init: true
    depends_on:
      - api
    environment:
      # Default to host-accessible API URL for browser-based clients
      # Rename this to match your framework, e.g. NEXT_PUBLIC_API_BASE_URL or REACT_APP_API_BASE_URL
      CLIENT_API_BASE_URL: ${CLIENT_API_BASE_URL:-http://localhost:8000}
    ports:
      - "3000:3000"
    networks: [backend]

  passive-recon:
    build: ./workers/passive-recon
    <<: *worker-base
    profiles: ["passive"]

  active-recon:
    build: ./workers/active-recon
    <<: *worker-base
    profiles: ["active"]

  vuln-testing:
    build: ./workers/vuln-testing
    <<: *worker-base
    profiles: ["vuln"]

  kill-chain:
    build: ./workers/kill-chain
    <<: *worker-base
    profiles: ["kill"]

  reporting:
    build: ./workers/reporting
    <<: *worker-base
    profiles: ["report"]

volumes:
  db-data:

networks:
  backend:
