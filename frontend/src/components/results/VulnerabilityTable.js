'use client';

import { useState } from 'react';
import { ExternalLink, ChevronRight, AlertTriangle, CheckCircle2, Clock } from 'lucide-react';
import { CVSSScore } from './CVSSScore';

const SEVERITY_CONFIG = {
  CRITICAL: { badge: 'bg-red-500', text: 'text-red-500' },
  HIGH: { badge: 'bg-orange-500', text: 'text-orange-500' },
  MEDIUM: { badge: 'bg-yellow-500', text: 'text-yellow-500' },
  LOW: { badge: 'bg-blue-500', text: 'text-blue-500' },
  INFO: { badge: 'bg-gray-500', text: 'text-gray-400' },
};

const STATUS_CONFIG = {
  NEW: { icon: AlertTriangle, text: 'text-yellow-500', label: 'New' },
  CONFIRMED: { icon: CheckCircle2, text: 'text-green-500', label: 'Confirmed' },
  IN_PROGRESS: { icon: Clock, text: 'text-blue-500', label: 'In Progress' },
  RESOLVED: { icon: CheckCircle2, text: 'text-gray-500', label: 'Resolved' },
  FALSE_POSITIVE: { icon: AlertTriangle, text: 'text-gray-500', label: 'False Positive' },
};

export function VulnerabilityTable({ vulnerabilities }) {
  const [selectedVuln, setSelectedVuln] = useState(null);

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    });
  };

  const handleRowClick = (vuln) => {
    setSelectedVuln(selectedVuln?.id === vuln.id ? null : vuln);
  };

  return (
    <div className="bg-[#1a1a1a] border border-gray-800 rounded-lg overflow-hidden">
      <div className="overflow-x-auto">
        <table className="w-full">
          <thead className="bg-[#0f0f0f] border-b border-gray-800">
            <tr>
              <th className="px-6 py-4 text-left text-xs font-semibold text-gray-400 uppercase tracking-wider">
                Severity
              </th>
              <th className="px-6 py-4 text-left text-xs font-semibold text-gray-400 uppercase tracking-wider">
                Title
              </th>
              <th className="px-6 py-4 text-left text-xs font-semibold text-gray-400 uppercase tracking-wider">
                Target
              </th>
              <th className="px-6 py-4 text-left text-xs font-semibold text-gray-400 uppercase tracking-wider">
                Status
              </th>
              <th className="px-6 py-4 text-left text-xs font-semibold text-gray-400 uppercase tracking-wider">
                CVSS
              </th>
              <th className="px-6 py-4 text-left text-xs font-semibold text-gray-400 uppercase tracking-wider">
                Discovered
              </th>
              <th className="px-6 py-4 text-left text-xs font-semibold text-gray-400 uppercase tracking-wider">
                Actions
              </th>
            </tr>
          </thead>
          <tbody className="divide-y divide-gray-800">
            {vulnerabilities.map((vuln) => {
              const severityConfig = SEVERITY_CONFIG[vuln.severity] || SEVERITY_CONFIG.INFO;
              const statusConfig = STATUS_CONFIG[vuln.status] || STATUS_CONFIG.NEW;
              const StatusIcon = statusConfig.icon;
              const isExpanded = selectedVuln?.id === vuln.id;

              return (
                <>
                  <tr
                    key={vuln.id}
                    onClick={() => handleRowClick(vuln)}
                    className="hover:bg-gray-800/50 cursor-pointer transition-colors"
                  >
                    {/* Severity */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center gap-2">
                        <div className={`w-2 h-2 rounded-full ${severityConfig.badge}`}></div>
                        <span className={`text-sm font-medium ${severityConfig.text}`}>
                          {vuln.severity}
                        </span>
                      </div>
                    </td>

                    {/* Title */}
                    <td className="px-6 py-4">
                      <div className="flex items-center gap-2">
                        <ChevronRight
                          className={`w-4 h-4 text-gray-500 transition-transform ${
                            isExpanded ? 'rotate-90' : ''
                          }`}
                        />
                        <div>
                          <div className="text-sm font-medium text-white">{vuln.title}</div>
                          {vuln.cve_id && (
                            <div className="text-xs text-purple-400 font-mono mt-0.5">
                              {vuln.cve_id}
                            </div>
                          )}
                        </div>
                      </div>
                    </td>

                    {/* Target */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm text-gray-300">
                        {vuln.target?.name || 'N/A'}
                      </span>
                    </td>

                    {/* Status */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center gap-1.5">
                        <StatusIcon className={`w-4 h-4 ${statusConfig.text}`} />
                        <span className={`text-sm ${statusConfig.text}`}>
                          {statusConfig.label}
                        </span>
                      </div>
                    </td>

                    {/* CVSS */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      {vuln.cvss_score ? (
                        <CVSSScore score={vuln.cvss_score} compact />
                      ) : (
                        <span className="text-sm text-gray-500">N/A</span>
                      )}
                    </td>

                    {/* Discovered Date */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm text-gray-400">
                        {vuln.discovered_at ? formatDate(vuln.discovered_at) : 'N/A'}
                      </span>
                    </td>

                    {/* Actions */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      {vuln.asset_url && (
                        <a
                          href={vuln.asset_url}
                          target="_blank"
                          rel="noopener noreferrer"
                          onClick={(e) => e.stopPropagation()}
                          className="inline-flex items-center gap-1 text-blue-400 hover:text-blue-300 transition-colors"
                        >
                          <ExternalLink className="w-4 h-4" />
                        </a>
                      )}
                    </td>
                  </tr>

                  {/* Expanded Row Details */}
                  {isExpanded && (
                    <tr>
                      <td colSpan={7} className="px-6 py-4 bg-[#0f0f0f]">
                        <div className="space-y-4">
                          {/* Description */}
                          <div>
                            <h4 className="text-xs font-semibold text-gray-400 uppercase tracking-wide mb-2">
                              Description
                            </h4>
                            <p className="text-sm text-gray-300 leading-relaxed">
                              {vuln.description}
                            </p>
                          </div>

                          {/* Affected Asset */}
                          {vuln.asset_url && (
                            <div>
                              <h4 className="text-xs font-semibold text-gray-400 uppercase tracking-wide mb-2">
                                Affected Asset
                              </h4>
                              <code className="text-sm text-blue-400 font-mono">
                                {vuln.asset_url}
                              </code>
                            </div>
                          )}

                          {/* Technical Details */}
                          {vuln.technical_details && (
                            <div>
                              <h4 className="text-xs font-semibold text-gray-400 uppercase tracking-wide mb-2">
                                Technical Details
                              </h4>
                              <div className="bg-[#1a1a1a] border border-gray-800 rounded p-3">
                                <pre className="text-xs text-gray-300 whitespace-pre-wrap font-mono">
                                  {vuln.technical_details}
                                </pre>
                              </div>
                            </div>
                          )}

                          {/* Remediation */}
                          {vuln.remediation && (
                            <div>
                              <h4 className="text-xs font-semibold text-gray-400 uppercase tracking-wide mb-2">
                                Remediation
                              </h4>
                              <p className="text-sm text-gray-300 leading-relaxed">
                                {vuln.remediation}
                              </p>
                            </div>
                          )}
                        </div>
                      </td>
                    </tr>
                  )}
                </>
              );
            })}
          </tbody>
        </table>
      </div>
    </div>
  );
}
