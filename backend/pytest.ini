[pytest]
DJANGO_SETTINGS_MODULE = config.settings.testing
python_files = tests.py test_*.py *_tests.py
python_classes = Test* *Tests
python_functions = test_*
testpaths = tests
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=apps
    --cov=api
    --cov=services
    --cov=core
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --reuse-db
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    vulnerability: marks tests related to vulnerability management
    scanning: marks tests related to scanning functionality
    reporting: marks tests related to report generation
    security: marks tests related to security functionality
    performance: marks tests related to performance testing
    requires_tools: marks tests that require external penetration testing tools
    requires_network: marks tests that require network access
    api: marks tests for API endpoints
    scanner: marks tests for scanner engines
    realtime: marks tests for real-time features
    edge_cases: marks tests for edge cases and boundary conditions
    phase1: marks tests implemented in Phase 1 improvements
    phase2: marks tests implemented in Phase 2 improvements
    large_dataset: marks tests using large datasets
    database: marks tests for database performance and isolation
    benchmark: marks performance benchmark tests
    load_test: marks load testing scenarios
    phase3: marks tests implemented in Phase 3 production readiness
    chaos: marks chaos engineering and resilience tests
    compliance: marks compliance and regulatory tests
    production: marks production readiness tests
    deployment: marks deployment validation tests
    monitoring: marks monitoring and observability tests
    audit: marks audit logging and trail tests
    penetration: marks penetration testing scenarios
    vulnerability_assessment: marks vulnerability assessment tests
    network: marks network failure tests
    service_failure: marks service failure tests
    data_retention: marks data retention policy tests