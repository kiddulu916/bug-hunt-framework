# Generated by Django 4.2.7 on 2025-09-15 04:00

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("scanning", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Vulnerability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "vulnerability_name",
                    models.CharField(
                        help_text="Name/title of the vulnerability", max_length=255
                    ),
                ),
                (
                    "vulnerability_type",
                    models.CharField(
                        help_text="Type of vulnerability (sqli, xss, rce, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "owasp_category",
                    models.CharField(
                        blank=True,
                        help_text="OWASP Top 10 category (A01, A02, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "cwe_id",
                    models.CharField(
                        blank=True,
                        help_text="CWE identifier (CWE-79, CWE-89, etc.)",
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                            ("info", "Info"),
                        ],
                        help_text="Vulnerability severity level",
                        max_length=20,
                    ),
                ),
                (
                    "cvss_score",
                    models.FloatField(
                        blank=True, help_text="CVSS score (0.0-10.0)", null=True
                    ),
                ),
                (
                    "impact_description",
                    models.TextField(help_text="Description of potential impact"),
                ),
                (
                    "affected_url",
                    models.URLField(
                        help_text="URL where vulnerability was found", max_length=1000
                    ),
                ),
                (
                    "affected_parameter",
                    models.CharField(
                        blank=True,
                        help_text="Specific parameter that's vulnerable",
                        max_length=255,
                    ),
                ),
                (
                    "http_method",
                    models.CharField(
                        blank=True,
                        help_text="HTTP method (GET, POST, etc.)",
                        max_length=10,
                    ),
                ),
                (
                    "payload_used",
                    models.TextField(
                        blank=True, help_text="Payload that triggered the vulnerability"
                    ),
                ),
                (
                    "request_data",
                    models.TextField(
                        blank=True,
                        help_text="Full HTTP request demonstrating the vulnerability",
                    ),
                ),
                (
                    "response_data",
                    models.TextField(
                        blank=True,
                        help_text="HTTP response showing vulnerability evidence",
                    ),
                ),
                (
                    "discovered_by_tool",
                    models.CharField(
                        help_text="Tool that discovered this vulnerability",
                        max_length=100,
                    ),
                ),
                (
                    "discovery_method",
                    models.CharField(
                        help_text="Method used to discover vulnerability",
                        max_length=200,
                    ),
                ),
                (
                    "confidence_level",
                    models.FloatField(
                        default=0.0,
                        help_text="Confidence in vulnerability validity (0-1)",
                    ),
                ),
                (
                    "false_positive_likelihood",
                    models.FloatField(
                        default=0.0,
                        help_text="Likelihood this is a false positive (0-1)",
                    ),
                ),
                (
                    "screenshot_paths",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=500),
                        blank=True,
                        default=list,
                        help_text="Paths to screenshot evidence",
                        size=None,
                    ),
                ),
                (
                    "additional_evidence",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional evidence files and data",
                    ),
                ),
                (
                    "is_exploitable",
                    models.BooleanField(
                        default=False,
                        help_text="Whether vulnerability was successfully exploited",
                    ),
                ),
                (
                    "exploitation_difficulty",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                            ("unknown", "Unknown"),
                        ],
                        help_text="Difficulty level for exploitation",
                        max_length=20,
                    ),
                ),
                (
                    "exploitation_notes",
                    models.TextField(
                        blank=True, help_text="Notes on exploitation attempts"
                    ),
                ),
                (
                    "remediation_suggestion",
                    models.TextField(
                        blank=True, help_text="Suggested remediation steps"
                    ),
                ),
                (
                    "remediation_priority",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("immediate", "Immediate"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                            ("info_only", "Info Only"),
                        ],
                        help_text="Priority for remediation",
                        max_length=20,
                    ),
                ),
                (
                    "manually_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether vulnerability has been manually verified",
                    ),
                ),
                (
                    "verification_notes",
                    models.TextField(blank=True, help_text="Manual verification notes"),
                ),
                ("discovered_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "scan_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vulnerabilities",
                        to="scanning.scansession",
                    ),
                ),
            ],
            options={
                "db_table": "vulnerabilities",
                "ordering": ["-discovered_at"],
            },
        ),
        migrations.CreateModel(
            name="ExploitationChain",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "chain_name",
                    models.CharField(
                        help_text="Name for this exploitation chain", max_length=255
                    ),
                ),
                (
                    "chain_description",
                    models.TextField(help_text="Description of the exploitation chain"),
                ),
                (
                    "step_number",
                    models.IntegerField(help_text="Step number in the chain"),
                ),
                (
                    "total_steps",
                    models.IntegerField(help_text="Total steps in this chain"),
                ),
                (
                    "step_description",
                    models.TextField(help_text="Description of this exploitation step"),
                ),
                (
                    "payload",
                    models.TextField(blank=True, help_text="Payload used in this step"),
                ),
                (
                    "expected_result",
                    models.TextField(
                        blank=True, help_text="Expected result from this step"
                    ),
                ),
                (
                    "actual_result",
                    models.TextField(
                        blank=True, help_text="Actual result obtained from this step"
                    ),
                ),
                (
                    "screenshot_path",
                    models.CharField(
                        blank=True,
                        help_text="Screenshot evidence for this step",
                        max_length=500,
                    ),
                ),
                (
                    "request_response_log",
                    models.TextField(
                        blank=True, help_text="HTTP request/response log for this step"
                    ),
                ),
                (
                    "step_successful",
                    models.BooleanField(
                        default=False, help_text="Whether this step was successful"
                    ),
                ),
                (
                    "chain_successful",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the entire chain was successful",
                    ),
                ),
                (
                    "impact_increase",
                    models.CharField(
                        blank=True,
                        help_text="How much this step increases impact (none, low, medium, high)",
                        max_length=50,
                    ),
                ),
                (
                    "final_impact_description",
                    models.TextField(
                        blank=True, help_text="Description of final impact achieved"
                    ),
                ),
                ("executed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "vulnerability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exploitation_chains",
                        to="vulnerabilities.vulnerability",
                    ),
                ),
            ],
            options={
                "db_table": "exploitation_chains",
                "ordering": ["vulnerability", "step_number"],
            },
        ),
        migrations.AddIndex(
            model_name="vulnerability",
            index=models.Index(
                fields=["scan_session", "severity"],
                name="vulnerabili_scan_se_442bcc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerability",
            index=models.Index(
                fields=["vulnerability_type"], name="vulnerabili_vulnera_07d79b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerability",
            index=models.Index(
                fields=["owasp_category"], name="vulnerabili_owasp_c_c8bdd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerability",
            index=models.Index(
                fields=["manually_verified"], name="vulnerabili_manuall_adb1e0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerability",
            index=models.Index(
                fields=["severity", "cvss_score"], name="vulnerabili_severit_fd2b7b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="exploitationchain",
            index=models.Index(
                fields=["vulnerability", "step_number"],
                name="exploitatio_vulnera_8b3747_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="exploitationchain",
            index=models.Index(
                fields=["chain_successful"], name="exploitatio_chain_s_39df05_idx"
            ),
        ),
    ]
