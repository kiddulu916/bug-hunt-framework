# Generated by Django 4.2.7 on 2025-09-15 03:59

import django.contrib.postgres.fields
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Target",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "target_name",
                    models.CharField(
                        help_text="Target company name", max_length=255, unique=True
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("hackerone", "HackerOne"),
                            ("bugcrowd", "Bugcrowd"),
                            ("intigriti", "Intigriti"),
                            ("synack", "Synack"),
                            ("yeswehack", "YesWeHack"),
                            ("private", "Private Program"),
                        ],
                        help_text="Bug bounty platform hosting this program",
                        max_length=20,
                    ),
                ),
                (
                    "researcher_username",
                    models.CharField(
                        help_text="Your username on the bug bounty platform",
                        max_length=100,
                    ),
                ),
                (
                    "main_url",
                    models.URLField(help_text="Primary target URL", max_length=500),
                ),
                (
                    "wildcard_url",
                    models.URLField(
                        blank=True,
                        help_text="Wildcard URL if applicable (e.g., *.example.com)",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "in_scope_urls",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.URLField(max_length=500),
                        blank=True,
                        default=list,
                        help_text="URLs that are in scope for testing",
                        size=None,
                    ),
                ),
                (
                    "out_of_scope_urls",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.URLField(max_length=500),
                        blank=True,
                        default=list,
                        help_text="URLs that are explicitly out of scope",
                        size=None,
                    ),
                ),
                (
                    "in_scope_assets",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=500),
                        blank=True,
                        default=list,
                        help_text="Other in-scope assets (IPs, domains, etc.)",
                        size=None,
                    ),
                ),
                (
                    "out_of_scope_assets",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=500),
                        blank=True,
                        default=list,
                        help_text="Other out-of-scope assets",
                        size=None,
                    ),
                ),
                (
                    "requests_per_second",
                    models.FloatField(
                        default=5.0, help_text="Maximum requests per second to target"
                    ),
                ),
                (
                    "concurrent_requests",
                    models.IntegerField(
                        default=10, help_text="Maximum concurrent requests"
                    ),
                ),
                (
                    "request_delay_ms",
                    models.IntegerField(
                        default=200, help_text="Delay between requests in milliseconds"
                    ),
                ),
                (
                    "required_headers",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Headers required for every request to target",
                    ),
                ),
                (
                    "authentication_headers",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Authentication headers (cookies, API keys, etc.)",
                    ),
                ),
                (
                    "user_agents",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=500),
                        blank=True,
                        default=list,
                        help_text="Custom User-Agent strings to rotate",
                        size=None,
                    ),
                ),
                (
                    "program_notes",
                    models.TextField(
                        blank=True,
                        help_text="General notes about the bug bounty program",
                    ),
                ),
                (
                    "special_requirements",
                    models.TextField(
                        blank=True,
                        help_text="Special testing requirements or restrictions",
                    ),
                ),
                (
                    "pii_redaction_rules",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Rules for redacting PII in reports",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this target is active for testing",
                    ),
                ),
            ],
            options={
                "db_table": "targets",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["platform"], name="targets_platfor_32f5a6_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="targets_is_acti_c2eddb_idx"
                    ),
                    models.Index(
                        fields=["target_name"], name="targets_target__085a09_idx"
                    ),
                ],
            },
        ),
    ]
