# Generated by Django 4.2.7 on 2025-09-25 03:59

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("vulnerabilities", "0001_initial"),
        ("targets", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ExploitationSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "exploitation_type",
                    models.CharField(
                        choices=[
                            ("sql_injection", "SQL Injection"),
                            ("xss", "Cross-Site Scripting"),
                            ("csrf", "Cross-Site Request Forgery"),
                            ("command_injection", "Command Injection"),
                            ("file_upload", "File Upload Vulnerability"),
                            ("directory_traversal", "Directory Traversal"),
                            ("ssrf", "Server-Side Request Forgery"),
                            ("xxe", "XML External Entity"),
                            ("deserialization", "Insecure Deserialization"),
                            ("privilege_escalation", "Privilege Escalation"),
                            ("auth_bypass", "Authentication Bypass"),
                            ("authz_bypass", "Authorization Bypass"),
                            ("rce", "Remote Code Execution"),
                            ("lfi", "Local File Inclusion"),
                            ("rfi", "Remote File Inclusion"),
                            ("buffer_overflow", "Buffer Overflow"),
                            ("race_condition", "Race Condition"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("successful", "Successful"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                            ("blocked", "Blocked by Defense"),
                            ("timeout", "Timeout"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Informational"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="info",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("exploit_chain_data", models.JSONField(blank=True, default=dict)),
                (
                    "payloads_used",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(),
                        blank=True,
                        default=list,
                        help_text="List of payloads used in this exploitation session",
                        size=None,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("automated", models.BooleanField(default=True)),
                (
                    "target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exploitation_sessions",
                        to="targets.target",
                    ),
                ),
                (
                    "vulnerability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exploitation_sessions",
                        to="vulnerabilities.vulnerability",
                    ),
                ),
            ],
            options={
                "db_table": "exploitation_sessions",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="ExploitTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "exploitation_type",
                    models.CharField(
                        choices=[
                            ("sql_injection", "SQL Injection"),
                            ("xss", "Cross-Site Scripting"),
                            ("csrf", "Cross-Site Request Forgery"),
                            ("command_injection", "Command Injection"),
                            ("file_upload", "File Upload Vulnerability"),
                            ("directory_traversal", "Directory Traversal"),
                            ("ssrf", "Server-Side Request Forgery"),
                            ("xxe", "XML External Entity"),
                            ("deserialization", "Insecure Deserialization"),
                            ("privilege_escalation", "Privilege Escalation"),
                            ("auth_bypass", "Authentication Bypass"),
                            ("authz_bypass", "Authorization Bypass"),
                            ("rce", "Remote Code Execution"),
                            ("lfi", "Local File Inclusion"),
                            ("rfi", "Remote File Inclusion"),
                            ("buffer_overflow", "Buffer Overflow"),
                            ("race_condition", "Race Condition"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "payload_template",
                    models.TextField(help_text="Template payload with placeholders"),
                ),
                (
                    "configuration",
                    models.JSONField(
                        default=dict,
                        help_text="Configuration parameters for the exploit",
                    ),
                ),
                (
                    "prerequisites",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(),
                        blank=True,
                        default=list,
                        help_text="List of prerequisites for this exploit",
                        size=None,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "exploit_templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ExploitResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("payload", models.TextField()),
                ("response_data", models.JSONField(blank=True, default=dict)),
                ("success", models.BooleanField(default=False)),
                (
                    "impact_level",
                    models.CharField(
                        choices=[
                            ("info", "Informational"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="info",
                        max_length=20,
                    ),
                ),
                (
                    "evidence_files",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=500),
                        blank=True,
                        default=list,
                        help_text="Paths to evidence files (screenshots, logs, etc.)",
                        size=None,
                    ),
                ),
                ("proof_of_concept", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="exploitation.exploitationsession",
                    ),
                ),
            ],
            options={
                "db_table": "exploit_results",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ExploitChain",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "chain_steps",
                    models.JSONField(
                        default=list, help_text="Ordered list of exploitation steps"
                    ),
                ),
                ("success_rate", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "target_vulnerabilities",
                    models.ManyToManyField(
                        related_name="exploit_chains",
                        to="vulnerabilities.vulnerability",
                    ),
                ),
            ],
            options={
                "db_table": "exploit_chains",
                "ordering": ["-created_at"],
            },
        ),
    ]
